CREATE TABLE RESTAURANTE(
    NOMBRE VARCHAR(35),
    DESCRIPCION VARCHAR(280) NOT NULL,
    TIPOCOMIDAREST VARCHAR(15) NOT NULL,
    PAGINAWEB VARCHAR(50),
    CONSTRAINT nom_rest_pk PRIMARY KEY (NOMBRE),
    CONSTRAINT rest_ck_desc CHECK (LENGTH(DESCRIPCION) > 5),
    CONSTRAINT rest_ck_pag CHECK ( LENGTH(PAGINAWEB)> 5),
    CONSTRAINT rest_ck_nomb CHECK ( LENGTH(NOMBRE)> 5));
    
CREATE TABLE INVENTARIO(
    RESTAURANTE_NOMBRE VARCHAR2(35),
    CONSTRAINT inv_nom_pk PRIMARY KEY(RESTAURANTE_NOMBRE),
    CONSTRAINT inv_nom_fk
        FOREIGN KEY (RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE));

    
CREATE TABLE PRODUCTO(
    NOMBRE VARCHAR2(25),
    CATEGORIA NUMBER(8),
    PRECIOVENTA NUMBER(18),
    COSTOPRODUCCION NUMBER(17),
    TIPOCOMIDAPROD VARCHAR2(20),
    TIEMPOPREPARACION NUMBER(7),
    CONSTRAINT pro_pk PRIMARY KEY (NOMBRE),
    CONSTRAINT pro_ck_nom CHECK ( LENGTH(NOMBRE)> 5),
    CONSTRAINT pro_ck_cat CHECK ( CATEGORIA > 0),
    CONSTRAINT pro_ck_precVent CHECK ( PRECIOVENTA > 0),
    CONSTRAINT pro_ck_costProd CHECK ( COSTOPRODUCCION < PRECIOVENTA),
    CONSTRAINT pro_ck_tipocomprod CHECK ( LENGTH(TIPOCOMIDAPROD) > 0),
    CONSTRAINT pro_ck_tiempoPrep CHECK ( TIEMPOPREPARACION > 0));

CREATE TABLE PRODUCTOSBODEGA(
    CANTIDADPRODUCTO NUMBER(10),
    INVENTARIO_RESTAURANTE_NOMBRE VARCHAR2(35),
    PRODUCTO_NOMBRE VARCHAR(25),
    MAXIMO NUMBER(10),
    CONSTRAINT prodbod_pk PRIMARY KEY(INVENTARIO_RESTAURANTE_NOMBRE,PRODUCTO_NOMBRE),
    CONSTRAINT prodbod_inv_fk
        FOREIGN KEY (INVENTARIO_RESTAURANTE_NOMBRE)
        REFERENCES INVENTARIO(RESTAURANTE_NOMBRE),
    CONSTRAINT prodbod_prod_fk
        FOREIGN KEY (PRODUCTO_NOMBRE)
        REFERENCES PRODUCTO(NOMBRE),
    CONSTRAINT prodBod_ck_cantProd CHECK ( CANTIDADPRODUCTO >= 0 AND MAXIMO>0 AND CANTIDADPRODUCTO<=MAXIMO));

CREATE TABLE EQUIVALENCIASPRODUCTO(
    RESTAURANTE_NOMBRE VARCHAR2(35),
    PRODUCTO_NOMBRE VARCHAR(25),
    EQUIVALENCIA NUMBER(8),
    CONSTRAINT eqPROD_PK PRIMARY KEY (RESTAURANTE_NOMBRE,PRODUCTO_NOMBRE),
    CONSTRAINT EQPROD_PROD_FK
        FOREIGN KEY (PRODUCTO_NOMBRE)
        REFERENCES PRODUCTO(NOMBRE),
    CONSTRAINT EQPROD_REST_FK
        FOREIGN KEY (RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT EQPROD_EQUIV_CK
        CHECK (EQUIVALENCIA > 0));
    
CREATE TABLE INGREDIENTE(
    NOMBRE VARCHAR2(30),
    DESCESP VARCHAR2(300),
    DESCING VARCHAR2(300),
    TIPO VARCHAR(15),
    CONSTRAINT ing_PK PRIMARY KEY (NOMBRE),
    CONSTRAINT ing_ck_nom CHECK ( LENGTH(NOMBRE) > 0),
    CONSTRAINT ing_ck_descesp CHECK ( LENGTH(DESCESP) > 0),
    CONSTRAINT ing_ck_descing CHECK ( LENGTH(DESCING) > 0),
    CONSTRAINT ing_ck_tipo CHECK ( LENGTH(TIPO) > 0));
        
CREATE TABLE PRODUCTO_INGREDIENTE(
    INGREDIENTE_NOMBRE VARCHAR(30),
    PRODUCTO_NOMBRE VARCHAR(25),
    CONSTRAINT proding_pk PRIMARY KEY (INGREDIENTE_NOMBRE, PRODUCTO_NOMBRE),
    CONSTRAINT proding_ing_fk
        FOREIGN KEY (INGREDIENTE_NOMBRE)
        REFERENCES INGREDIENTE(NOMBRE),
    CONSTRAINT proding_prod_fk
        FOREIGN KEY (PRODUCTO_NOMBRE)
        REFERENCES PRODUCTO(NOMBRE) );
                     
CREATE TABLE EQUIVALENCIASINGREDIENTE(
    RESTAURANTE_NOMBRE VARCHAR(35),
    INGREDIENTE_NOMBRE VARCHAR2(30),
    EQUIVALENCIA NUMBER(8),
    CONSTRAINT EQINGR_PK PRIMARY KEY (RESTAURANTE_NOMBRE, INGREDIENTE_NOMBRE),
    CONSTRAINT EQINGR_INGR_FK
        FOREIGN KEY (INGREDIENTE_NOMBRE)
        REFERENCES INGREDIENTE(NOMBRE),
    CONSTRAINT EQINGR_REST_FK
        FOREIGN KEY (RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT EQINGR_EQUIV_CK CHECK (EQUIVALENCIA >0)
        );
        

CREATE TABLE MENU(
    NOMBRE VARCHAR2(25),
    CATEGORIA NUMBER(8),
    PRECIOVENTA NUMBER(18),
    COSTOPRODUCCION NUMBER(17),
    TIPOCOMIDAPROD VARCHAR2(20),
    TIEMPOPREPARACION NUMBER(7),
    RESTAURANTE_NOMBRE VARCHAR(35),
    CONSTRAINT menu_pk PRIMARY KEY (NOMBRE),
    CONSTRAINT menu_rest_fk
        FOREIGN KEY (RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT men_ck_nom CHECK ( LENGTH(NOMBRE)> 5),
    CONSTRAINT men_ck_cat CHECK ( CATEGORIA > 0),
    CONSTRAINT men_ck_precVent CHECK ( PRECIOVENTA > 0),
    CONSTRAINT men_ck_costProd CHECK ( COSTOPRODUCCION > 0),
    CONSTRAINT men_ck_tipocomprod CHECK ( LENGTH(TIPOCOMIDAPROD) > 0),
    CONSTRAINT men_ck_tiempoPrep CHECK ( TIEMPOPREPARACION > 0));
    
CREATE TABLE USUARIO(
    USUARIO VARCHAR(30),
    CONTRASENA VARCHAR(30),
    ROL VARCHAR(30),
    CORREO VARCHAR(40),
    CONSTRAINT usr_pk PRIMARY KEY (USUARIO),
    CONSTRAINT usr_ck_usr CHECK ( LENGTH(USUARIO) > 3),
    CONSTRAINT usr_ck_cntrs CHECK ( LENGTH(CONTRASENA) > 5),
    CONSTRAINT usr_ck_rol CHECK ( LENGTH(ROL) > 3),
    CONSTRAINT usr_ck_correo CHECK ( LENGTH(CORREO) > 4));

CREATE TABLE CLIENTESREGISTRADOS(
    USUARIO_CLIENTE VARCHAR(30),
    CONSTRAINT CLI_pk PRIMARY KEY (USUARIO_CLIENTE),
    CONSTRAINT cli_usr_fk 
        FOREIGN KEY (USUARIO_CLIENTE)
        REFERENCES USUARIO(USUARIO));
    
CREATE TABLE ZONA(
    NOMBRE VARCHAR(30),
    CAPACIDAD NUMBER(8),
    RESTAURANTE_NOMBRE VARCHAR(35),
    CONSTRAINT zona_pk PRIMARY KEY (NOMBRE),
    CONSTRAINT zona_rest_fk
        FOREIGN KEY (RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT zona_ck_nom CHECK (LENGTH(NOMBRE) > 3),
    CONSTRAINT zona_ck_cap CHECK ( CAPACIDAD > 0));

CREATE TABLE EVENTO(
    ID NUMBER(30),
    MENU_NOMBRE VARCHAR(25),
    CLIREGS_USUARIO_CLIENTE VARCHAR(30),
    ZONA_NOMBRE VARCHAR(30),
    CONSTRAINT evento_pk PRIMARY KEY (ID),
    CONSTRAINT evento_menu_fk
        FOREIGN KEY(MENU_NOMBRE)
        REFERENCES MENU(NOMBRE),
    CONSTRAINT evento_cli_fk
        FOREIGN KEY(CLIREGS_USUARIO_CLIENTE)
        REFERENCES CLIENTESREGISTRADOS(USUARIO_CLIENTE),
    CONSTRAINT evento_zon_fk
        FOREIGN KEY(ZONA_NOMBRE)
        REFERENCES ZONA(NOMBRE),
    CONSTRAINT evento_ck_id CHECK (ID > 0));
        
CREATE TABLE RESTAURANTE_PRODUCTO(
    RESTAURANTE_NOMBRE VARCHAR(35),
    PRODUCTO_NOMBRE VARCHAR(25),
    CONSTRAINT rest_prod_pk PRIMARY KEY (RESTAURANTE_NOMBRE,PRODUCTO_NOMBRE),
    CONSTRAINT rest_prod_rest_fk
        FOREIGN KEY(RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT rest_prod_PROD_fk
        FOREIGN KEY(PRODUCTO_NOMBRE)
        REFERENCES PRODUCTO(NOMBRE));
        
CREATE TABLE RESTAURANTE_INGREDIENTE(
    RESTAURANTE_NOMBRE VARCHAR(35),
    INGREDIENTE_NOMBRE VARCHAR(30),
    CONSTRAINT rest_ingr_pk PRIMARY KEY (RESTAURANTE_NOMBRE,INGREDIENTE_NOMBRE),
    CONSTRAINT rest_ingr_rest_fk
        FOREIGN KEY(RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT rest_ingr_ingr_fk
        FOREIGN KEY(INGREDIENTE_NOMBRE)
        REFERENCES INGREDIENTE(NOMBRE));

CREATE TABLE PRODUCTO_MENU(
    MENU_NOMBRE VARCHAR(25),
    PRODUCTO_NOMBRE VARCHAR(25),
    CONSTRAINT prod_menu_pk PRIMARY KEY (MENU_NOMBRE,PRODUCTO_NOMBRE),
    CONSTRAINT prod_menu_menu_fk
        FOREIGN KEY(MENU_NOMBRE)
        REFERENCES MENU(NOMBRE),
    CONSTRAINT prod_menu_prod_fk
        FOREIGN KEY(PRODUCTO_NOMBRE)
        REFERENCES PRODUCTO(NOMBRE));
        


    
CREATE TABLE TIPOCOMIDA(
    NOMBRE VARCHAR2(25),
    PRODUCTO_NOMBRE VARCHAR2(25),
    CONSTRAINT TIPOCOMIDA_pk PRIMARY KEY(NOMBRE,PRODUCTO_NOMBRE),
    CONSTRAINT TIPOCOMIDA_PROD_fk
        FOREIGN KEY (PRODUCTO_NOMBRE)
        REFERENCES PRODUCTO(NOMBRE),
    CONSTRAINT tipocomida_ck_nombre CHECK (LENGTH(NOMBRE) > 0));



CREATE TABLE REPRESENTANTE(
    NOMBRE VARCHAR(30),
    CELULAR VARCHAR(10),
    RESTAURANTE_NOMBRE VARCHAR(35),
    CONSTRAINT rep_pk PRIMARY KEY(NOMBRE),
    CONSTRAINT rep_rest_fk
        FOREIGN KEY (RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT reprsnt_ck_nombre CHECK (LENGTH(NOMBRE) > 0),
    CONSTRAINT reprsnt_ck_celular CHECK (LENGTH(CELULAR) = 10)); -- El celular debe tenerlos 10 digitos

CREATE TABLE CHECKOUT(
    ID NUMBER(20),
    ENTREGADO NUMBER(1) NOT NULL,
    TIEMPOR VARCHAR(15),
    ZONA_NOMBRE VARCHAR(30),
    CLIREGS_USUARIO_CLIENTE VARCHAR(30),
    CONSTRAINT checkout_pk PRIMARY KEY (ID),
    CONSTRAINT ck_zona_fk
        FOREIGN KEY (ZONA_NOMBRE)
        REFERENCES ZONA(NOMBRE),
    CONSTRAINT ck_CLIREGS_USUARIO_FK
        FOREIGN KEY (CLIREGS_USUARIO_CLIENTE)
        REFERENCES CLIENTESREGISTRADOS(USUARIO_CLIENTE),
    CONSTRAINT chkout_ck_id CHECK (ID > 0)
    --CONSTRAINT chkout_ck_tiempoR CHECK (TIEMPOR > 907427912000));--El tiempo entregado debe ser mayor a 1998 (o en particular, a la fecha de creacion de rotondandes)
    );

CREATE TABLE PRODUCTO_CHECKOUT(
    CHECKOUT_ID NUMBER(20),
    PRODUCTO_NOMBRE VARCHAR(25),
    RESTAURANTE_NOMBRE VARCHAR(35),
    CANTIDAD_PRODUCTO NUMBER(5) NOT NULL,
    CONSTRAINT prod_ck_pk PRIMARY KEY(CHECKOUT_ID,PRODUCTO_NOMBRE, RESTAURANTE_NOMBRE),
    CONSTRAINT prod_ck_ck_fk
        FOREIGN KEY (CHECKOUT_ID)
        REFERENCES CHECKOUT(ID),
    CONSTRAINT prod_ck_prod_fk
        FOREIGN KEY (PRODUCTO_NOMBRE)
        REFERENCES PRODUCTO(NOMBRE),
    CONSTRAINT prod_ck_REST_FK
        FOREIGN KEY (RESTAURANTE_NOMBRE)
        REFERENCES RESTAURANTE(NOMBRE),
    CONSTRAINT prod_chk_ck CHECK (CANTIDAD_PRODUCTO>0));
    
CREATE TABLE MENU_CHECKOUT(
    CHECKOUT_ID NUMBER(20),
    MENU_NOMBRE VARCHAR(25),
    CANTIDAD_PRODUCTO NUMBER(5),
    CONSTRAINT MENU_CHK_pk PRIMARY KEY(CHECKOUT_ID,MENU_NOMBRE),
    CONSTRAINT MENU_CHK_ck_fk
        FOREIGN KEY (CHECKOUT_ID)
        REFERENCES CHECKOUT(ID),
    CONSTRAINT MENU_CK_MENU_FK
        FOREIGN KEY (MENU_NOMBRE)
        REFERENCES MENU(NOMBRE),
    CONSTRAINT MENU_CHK_ck CHECK (CANTIDAD_PRODUCTO>0));